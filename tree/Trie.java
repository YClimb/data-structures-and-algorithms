package tree;

/**
 * 字典树、前缀树
 *
 * @author yclimb
 * @date 2020/9/16
 */
public class Trie {
    /**
     * https://time.geekbang.org/column/article/72414
     * Trie 树，也叫“字典树”。
     * 顾名思义，它是一个树形结构。它是一种专门处理字符串匹配的数据结构，用来解决在一组字符串集合中快速查找某个字符串的问题。
     * Trie 树的本质，就是利用字符串之间的公共前缀，将重复的前缀合并在一起。
     * 其中，根节点不包含任何信息。每个节点表示一个字符串中的字符，从根节点到红色节点的一条路径表示一个字符串（注意：红色节点并不都是叶子节点）。
     *
     * 构造trie树：
     * 根节点不包含任何信息，将字符串分割为单个字符，每个字符为树的一个节点，依次插入字符串长度层节点，如果有重复的，沿着重复字符层插入，后插入的默认最终节点为左子节点
     *
     * 查询trie树：
     * 使用散列表存储树结构，根据下标计算来查找字符串
     *
     * Trie 树只是不适合精确匹配查找，这种问题更适合用散列表或者红黑树来解决。
     * Trie 树比较适合的是查找前缀匹配的字符串，比如搜索关键词智能匹配场景。
     *
     */
}
