package sort;

/**
 * 排序总结
 *
 * @author yclimb
 * @date 2020/9/10
 */
public class Sorts {
    public static void main(String[] args) {
        /**
         * 冒泡排序：前后比较相邻元素，满足大小关系则替换
         * 插入排序：数组分为已排序和未排序区间，每次取未排序区间的一个数字去和已排序区间比较，并插入合适的位置，后面数字依次往后移一位，直到未排序无
         * 选择排序：数组分为已排序和未排序区间，每次取未排序区间最小的数字，放在已排序的末尾，直到未排序无
         * 快速排序：分治递归思想，选取数组中任意一个数字为分区点，将数组分为小于分区点的区间和大于分区点的区间，各自排序之后，最终结果为顺序排列
         * 归并排序：将数组以中心点（一般为lenth/2）分隔为两半，各自排序左右区间；递归以上过程，直到两两排序完成，之后将排序的区间进行合并并排序，最终为顺序排列
         * 桶排序：将数组分为多个桶，如1-10，20-30，30-40，循环数组，将数组依次赋予桶并比较放入桶内相应位置，最终为顺序排列
         * 计数排序：特殊的桶排序，桶数量=分析数据长度，如：数组有100个数字，值为1-10之间，那么可以设置桶数量=10，循环100个数字依次放入10个桶中，最终为顺序排列
         */
    }
}
