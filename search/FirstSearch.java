package search;

/**
 * 深度优先和广度优先搜索算法
 *
 * @author yclimb
 * @date 2020/9/16
 */
public class FirstSearch {
    public static void main(String[] args) {
        /**
         * https://time.geekbang.org/column/article/70891
         * 深度优先和广度优先搜索算法
         * 算法是作用于具体数据结构之上的，深度优先搜索算法和广度优先搜索算法都是基于“图”这种数据结构的。
         * 这是因为，图这种数据结构的表达能力很强，大部分涉及搜索的场景都可以抽象成“图”。
         *
         * 广度优先搜索（Breadth-First-Search），简称 BFS。
         * 直观地讲，它其实就是一种“地毯式”层层推进的搜索策略，即先查找离起始顶点最近的，然后是次近的，依次往外搜索。
         * 广度优先搜索，通俗的理解就是，地毯式层层推进，从起始顶点开始，依次往外遍历。广度优先搜索需要借助队列来实现，遍历得到的路径就是，起始顶点到终止顶点的最短路径。
         *
         * 深度优先搜索（Depth-First-Search），简称 DFS。
         * 深度优先搜索用的是一种比较著名的算法思想，回溯思想。最直观的例子就是“走迷宫”。
         * 深度优先搜索用的是回溯思想，非常适合用递归实现。换种说法，深度优先搜索是借助栈来实现的。
         *
         * 在执行效率方面，深度优先和广度优先搜索的时间复杂度都是 O(E)，空间复杂度是 O(V)。
         * V 表示顶点的个数，E 表示边的个数。
         *
         */
    }
}
